{"mappings":"ACAA,a,S,qB,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,qB,C,E,G,M,O,C,G,O,qB,E,C,S,mB,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,C,S,uB,M,A,U,wI,C,S,qB,C,E,O,qB,I,mB,I,+B,I,sB,C,S,+B,C,C,C,E,G,G,G,A,U,O,E,O,qB,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,A,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,qB,E,G,CAIA,IAImB,mBAJb,iBAAmB,SAAS,gBAAgB,CAAC,eAC7C,gBAAkB,SAAS,aAAa,CAAC,qBACzC,kBAAoB,SAAS,aAAa,CAAC,uBAE3C,WAAa,AAAA,CAAA,MAAA,CAAA,mBAAA,gBAAgB,CAAC,EAAE,AAAF,EAAjB,KAAA,EAAA,mBAAqB,WAAW,CAAC,IAAI,EAAA,GAAM,IACxD,SAAW,WAAW,KAAK,CAAC,qBAC5B,UAAY,SAAW,QAAQ,CAAC,EAAE,CAAG,IAErC,YAAc,qBAAI,kBACrB,GAAG,CAAC,SAAC,CADR,EAII,IAAM,EAAM,OADI,AADH,EAAG,WAAW,CAAC,IAAI,GACX,OAAO,CAAC,AAAI,OAAQ,KAAc,MAAA,CAAV,WAAa,KAAM,KAGhE,OAAO,OAAO,QAAQ,CAAC,GAAO,EAAM,IACtC,GACC,MAAM,CAAC,SAAC,CADT,EACiB,OAAA,AAAQ,OAAR,C,GAEb,MAAQ,YAAY,MAAM,CAAC,SAAC,CAAA,CAAK,CAAvC,EAA+C,OAAA,EAAM,CAAK,EAAA,GACpD,QAAU,YAAY,MAAM,CAAG,KAAK,KAAK,CAAC,MAAQ,YAAY,MAAM,EAAI,EAE9E,SAAS,aAAa,CAAK,EACzB,OAAO,EAAM,QAAQ,GAAG,OAAO,CAAC,wBAAyB,UAC3D,CAEA,gBAAgB,WAAW,CAAG,aAAa,OAC3C,kBAAkB,WAAW,CAAG,aAAa","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar _populationsElems_;\n// write your code here\nvar populationsElems = document.querySelectorAll('.population');\nvar totalPopulation = document.querySelector('.total-population');\nvar averagePopulation = document.querySelector('.average-population');\nvar sampleText = ((_populationsElems_ = populationsElems[0]) === null || _populationsElems_ === void 0 ? void 0 : _populationsElems_.textContent.trim()) || '0';\nvar sepMatch = sampleText.match(/[\\s.,](?=\\d{3}\\b)/);\nvar separator = sepMatch ? sepMatch[0] : ',';\nvar populations = _to_consumable_array(populationsElems).map(function(el) {\n    var text = el.textContent.trim();\n    var cleaned = text.replace(new RegExp(\"\\\\\".concat(separator), 'g'), '');\n    var num = Number(cleaned);\n    return Number.isFinite(num) ? num : null;\n}).filter(function(num) {\n    return num !== null;\n});\nvar total = populations.reduce(function(acc, num) {\n    return acc + num;\n}, 0);\nvar average = populations.length ? Math.round(total / populations.length) : 0;\nfunction formatNumber(value) {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\n}\ntotalPopulation.textContent = formatNumber(total);\naveragePopulation.textContent = formatNumber(average);\n\n//# sourceMappingURL=js_get_data_DOM.08ac2ddf.js.map\n","'use strict';\n\n// write your code here\n\nconst populationsElems = document.querySelectorAll('.population');\nconst totalPopulation = document.querySelector('.total-population');\nconst averagePopulation = document.querySelector('.average-population');\n\nconst sampleText = populationsElems[0]?.textContent.trim() || '0';\nconst sepMatch = sampleText.match(/[\\s.,](?=\\d{3}\\b)/);\nconst separator = sepMatch ? sepMatch[0] : ',';\n\nconst populations = [...populationsElems]\n  .map((el) => {\n    const text = el.textContent.trim();\n    const cleaned = text.replace(new RegExp(`\\\\${separator}`, 'g'), '');\n    const num = Number(cleaned);\n\n    return Number.isFinite(num) ? num : null;\n  })\n  .filter((num) => num !== null);\n\nconst total = populations.reduce((acc, num) => acc + num, 0);\nconst average = populations.length ? Math.round(total / populations.length) : 0;\n\nfunction formatNumber(value) {\n  return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\n}\n\ntotalPopulation.textContent = formatNumber(total);\naveragePopulation.textContent = formatNumber(average);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_non_iterable_spread","TypeError","_to_consumable_array","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","name","test","_populationsElems_","populationsElems","document","querySelectorAll","totalPopulation","querySelector","averagePopulation","sampleText","textContent","trim","sepMatch","match","separator","populations","map","el","num","Number","text","replace","RegExp","concat","isFinite","filter","total","reduce","acc","average","Math","round","formatNumber","value"],"version":3,"file":"js_get_data_DOM.08ac2ddf.js.map"}